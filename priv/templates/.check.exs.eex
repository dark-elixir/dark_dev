[
  ## all available options with default values (see `mix check` docs for description)
  ## Defaults
  ## See: https://github.com/karolsluszniak/ex_check/blob/master/lib/ex_check/config/default.ex

  # parallel: true,
  # skipped: true,
  # tools: [
  #    {:compiler, "mix compile --warnings-as-errors --force"},
  #    {:unused_deps, "mix deps.unlock --check-unused", detect: [{:elixir, ">= 1.10.0"}], fix: "mix deps.unlock --unused"},
  #    {:formatter, "mix format --check-formatted", detect: [{:file, ".formatter.exs"}], fix: "mix format"},
  #    {:credo, "mix credo", detect: [{:package, :credo}]},
  #    {:doctor, "mix doctor", detect: [{:package, :doctor}, {:elixir, ">= 1.8.0"}]},
  #    {:sobelow, "mix sobelow --exit", umbrella: [recursive: true], detect: [{:package, :sobelow}]},
  #    {:ex_doc, "mix docs", detect: [{:package, :ex_doc}]},
  #    {:ex_unit, "mix test", detect: [{:file, "test"}], retry: "mix test --failed"},
  #    {:dialyzer, "mix dialyzer", detect: [{:package, :dialyxir}]},
  #    {:npm_test, "npm test", cd: "assets", detect: [{:file, "package.json", else: :disable}]}
  #  ]

  tools: [
    # Avoid double compiles for `:dev` and `:test` envs.
    # See: https://github.com/karolsluszniak/ex_check#avoiding-duplicate-builds

    {:compiler, env: %{"MIX_ENV" => "test"}},
    {:formatter, env: %{"MIX_ENV" => "test"}},
    {:ex_doc, env: %{"MIX_ENV" => "test"}},
    {:doctor, env: %{"MIX_ENV" => "test"}, detect: [package: :dark_dev]},
    {:credo, detect: [package: :dark_dev]},
    {:sobelow, detect: [package: :dark_dev]},
    {:dialyzer, detect: [package: :dark_dev]}
  ]
]

# Defaults
# all available options with default values (see `mix check` docs for description)
# See: https://github.com/karolsluszniak/ex_check/blob/master/lib/ex_check/config/default.ex

[
  ## don't run tools concurrently
  # parallel: false,

  ## don't print info about skipped tools
  # skipped: false,

  ## always run tools in fix mode (put it in ~/.check.exs locally, not in project config)
  # fix: true,

  ## don't retry automatically even if last run resulted in failures
  # retry: false,

  ## list of tools (see `mix check` docs for a list of default curated tools)
  tools: [
    ## curated tools may be disabled (e.g. the check for compilation warnings)
    # {:compiler, false},

    ## ...or have command & args adjusted (e.g. enable skip comments for sobelow)
    # {:sobelow, "mix sobelow --exit --skip"},

    ## ...or reordered (e.g. to see output from dialyzer before others)
    # {:dialyzer, order: -1},

    ## ...or reconfigured (e.g. disable parallel execution of ex_unit in umbrella)
    # {:ex_unit, umbrella: [parallel: false]},

    ## custom new tools may be added (Mix tasks or arbitrary commands)
    # {:my_task, "mix my_task", env: %{"MIX_ENV" => "prod"}},
    # {:my_tool, ["my_tool", "arg with spaces"]}
  ]
]
